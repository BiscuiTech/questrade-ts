/** @format */

import { QuestradeClass } from '../core/types';

export async function allOfGetEquitySymbols(qt: QuestradeClass, done: any) {
  let equitySymbols = await qt.getEquitySymbols('aapl');
  equitySymbols = await qt.getEquitySymbols('8049');
  equitySymbols = await qt.getEquitySymbols(8049);
  const equitySymbol = equitySymbols[0];
  await console.log(equitySymbol);
  await console.log('equitySymbol.symbol:');
  await console.log(equitySymbol.symbol);
  await console.log('equitySymbol.symbolId:');
  await console.log(equitySymbol.symbolId);
  await console.log('equitySymbol.description:');
  await console.log(equitySymbol.description);
  await console.log('equitySymbol.securityType:');
  await console.log(equitySymbol.securityType);
  await console.log('equitySymbol.listingExchange:');
  await console.log(equitySymbol.listingExchange);
  await console.log('equitySymbol.isQuotable:');
  await console.log(equitySymbol.isQuotable);
  await console.log('equitySymbol.isTradable:');
  await console.log(equitySymbol.isTradable);
  await console.log('equitySymbol.currency:');
  await console.log(equitySymbol.currency);
  await console.log('equitySymbol.prevDayClosePrice:');
  await console.log(equitySymbol.prevDayClosePrice);
  await console.log('equitySymbol.highPrice52:');
  await console.log(equitySymbol.highPrice52);
  await console.log('equitySymbol.lowPrice52:');
  await console.log(equitySymbol.lowPrice52);
  await console.log('equitySymbol.averageVol3Months:');
  await console.log(equitySymbol.averageVol3Months);
  await console.log('equitySymbol.averageVol20Days:');
  await console.log(equitySymbol.averageVol20Days);
  await console.log('equitySymbol.outstandingShares:');
  await console.log(equitySymbol.outstandingShares);
  await console.log('equitySymbol.eps:');
  await console.log(equitySymbol.eps);
  await console.log('equitySymbol.pe:');
  await console.log(equitySymbol.pe);
  await console.log('equitySymbol.dividend:');
  await console.log(equitySymbol.dividend);
  await console.log('equitySymbol.yield:');
  await console.log(equitySymbol.yield);
  await console.log('equitySymbol.exDate:');
  await console.log(equitySymbol.exDate);
  await console.log('equitySymbol.marketCap:');
  await console.log(equitySymbol.marketCap);
  await console.log('equitySymbol.tradeUnit:');
  await console.log(equitySymbol.tradeUnit);
  await console.log('equitySymbol.optionType:');
  await console.log(equitySymbol.optionType);
  await console.log('equitySymbol.optionDurationType:');
  await console.log(equitySymbol.optionDurationType);
  await console.log('equitySymbol.optionRoot:');
  await console.log(equitySymbol.optionRoot);
  await console.log('equitySymbol.optionContractDeliverables:');
  await console.log(equitySymbol.optionContractDeliverables);
  await console.log('equitySymbol.optionExerciseType:');
  await console.log(equitySymbol.optionExerciseType);
  await console.log('equitySymbol.optionExpiryDate:');
  await console.log(equitySymbol.optionExpiryDate);
  await console.log('equitySymbol.dividendDate:');
  await console.log(equitySymbol.dividendDate);
  await console.log('equitySymbol.optionStrikePrice:');
  await console.log(equitySymbol.optionStrikePrice);
  await console.log('equitySymbol.hasOptions:');
  await console.log(equitySymbol.hasOptions);
  await console.log('equitySymbol.minTicks:');
  await console.log(equitySymbol.minTicks);
  await console.log('equitySymbol.industrySector:');
  await console.log(equitySymbol.industrySector);
  await console.log('equitySymbol.industryGroup:');
  await console.log(equitySymbol.industryGroup);
  await console.log('equitySymbol.industrySubgroup:');
  await console.log(equitySymbol.industrySubgroup);
  done();
}
