/** @format */

import { QuestradeClass } from '../../core/types';

export async function allOfGetOrders(qt: QuestradeClass, done: any) {
  const orders = await qt.getOrdersByIds([469330615, 479029601]); //
  const getOrder = orders[1];
  await console.log('\n\n\n\nGETORDER:');
  await console.log('\n\ngetOrder.id:');
  await console.log(getOrder.id);
  await console.log('getOrder.symbol:');
  await console.log(getOrder.symbol);
  await console.log('getOrder.symbolId:');
  await console.log(getOrder.symbolId);
  await console.log('getOrder.totalQuantity:');
  await console.log(getOrder.totalQuantity);
  await console.log('getOrder.openQuantity:');
  await console.log(getOrder.openQuantity);
  await console.log('getOrder.filledQuantity:');
  await console.log(getOrder.filledQuantity);
  await console.log('getOrder.canceledQuantity:');
  await console.log(getOrder.canceledQuantity);
  await console.log('getOrder.side:');
  await console.log(getOrder.side);
  await console.log('getOrder.orderType:');
  await console.log(getOrder.orderType);
  await console.log('getOrder.limitPrice:');
  await console.log(getOrder.limitPrice);
  await console.log('getOrder.stopPrice:');
  await console.log(getOrder.stopPrice);
  await console.log('getOrder.isAllOrNone:');
  await console.log(getOrder.isAllOrNone);
  await console.log('getOrder.isAnonymous:');
  await console.log(getOrder.isAnonymous);
  await console.log('getOrder.icebergQuantity:');
  await console.log(getOrder.icebergQuantity);
  await console.log('getOrder.minQuantity:');
  await console.log(getOrder.minQuantity);
  await console.log('getOrder.avgExecPrice:');
  await console.log(getOrder.avgExecPrice);
  await console.log('getOrder.lastExecPrice:');
  await console.log(getOrder.lastExecPrice);
  await console.log('getOrder.source:');
  await console.log(getOrder.source);
  await console.log('getOrder.timeInForce:');
  await console.log(getOrder.timeInForce);
  await console.log('getOrder.gtdDate:');
  await console.log(getOrder.gtdDate);
  await console.log('getOrder.state:');
  await console.log(getOrder.state);
  await console.log('getOrder.clientReasonStr:');
  await console.log(getOrder.clientReasonStr);
  await console.log('getOrder.chainId:');
  await console.log(getOrder.chainId);
  await console.log('getOrder.creationTime:');
  await console.log(getOrder.creationTime);
  await console.log('getOrder.updateTime:');
  await console.log(getOrder.updateTime);
  await console.log('getOrder.notes:');
  await console.log(getOrder.notes);
  await console.log('getOrder.primaryRoute:');
  await console.log(getOrder.primaryRoute);
  await console.log('getOrder.secondaryRoute:');
  await console.log(getOrder.secondaryRoute);
  await console.log('getOrder.orderRoute:');
  await console.log(getOrder.orderRoute);
  await console.log('getOrder.venueHoldingOrder:');
  await console.log(getOrder.venueHoldingOrder);
  await console.log('getOrder.commissionCharged:');
  await console.log(getOrder.commissionCharged);
  await console.log('getOrder.exchangeOrderId:');
  await console.log(getOrder.exchangeOrderId);
  await console.log('getOrder.isSignificantShareholder:');
  await console.log(getOrder.isSignificantShareholder);
  await console.log('getOrder.isInsider:');
  await console.log(getOrder.isInsider);
  await console.log('getOrder.isLimitOffsetInDollar:');
  await console.log(getOrder.isLimitOffsetInDollar);
  await console.log('getOrder.userId:');
  await console.log(getOrder.userId);
  await console.log('getOrder.placementCommission:');
  await console.log(getOrder.placementCommission);
  await console.log('getOrder.legs:');
  await console.log(getOrder.legs);
  await console.log('getOrder.OrderLeg:');
  await console.log(getOrder.OrderLeg);
  await console.log('getOrder.strategyType:');
  await console.log(getOrder.strategyType);
  await console.log('getOrder.triggerStopPrice:');
  await console.log(getOrder.triggerStopPrice);
  await console.log('getOrder.orderGroupId:');
  await console.log(getOrder.orderGroupId);
  await console.log('getOrder.orderClass:');
  await console.log(getOrder.orderClass);
  done();
}
