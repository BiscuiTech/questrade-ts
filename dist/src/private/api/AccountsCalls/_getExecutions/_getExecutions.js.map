{"version":3,"file":"_getExecutions.js","sourceRoot":"","sources":["../../../../../../src/private/api/AccountsCalls/_getExecutions/_getExecutions.ts"],"names":[],"mappings":";;;AACA,2CAA2D;AAC3D,0CAAsD;AAEtD,mBAAmB;AACnB,qBAAqB;AACR,QAAA,cAAc,GAAG,UAAC,WAAwB,IAAK,OAAA,UAC1D,SAAiB,IACd,OAAA,UAAO,OAAe;;;;;;gBAIrB,qBAAM,4BAAmB,CAAC,WAAW,CAAC,CACpC,iBAAe,8BAAsB,CAAC,SAAS,EAAE,OAAO,CAAG,CAC5D,EAAE,EAAA;;YAJL,EAAE;YACF,sBAAO,CACL,SAEG,CACJ,CAAC,UAAU,EAAC;;;gBAEb,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;gBAC7B,sBAAO,EAAE,EAAC;;;;KAEb,EAZI,CAYJ,EAd2D,CAc3D,CAAC","sourcesContent":["import { Credentials, IExecution, IExecutions } from '../../../../typescript';\nimport { endpointFormatDateTool } from '../../../../utils';\nimport { _axiosAccountGetApi } from '../../../routes';\n\n// + _getExecutions\n/** _getExecutions */\nexport const _getExecutions = (credentials: Credentials) => (\n  startDate: string\n) => async (endDate: string): Promise<IExecution[]> => {\n  try {\n    //\n    return (\n      await _axiosAccountGetApi(credentials)<IExecutions>(\n        `/executions?${endpointFormatDateTool(startDate, endDate)}`\n      )()\n    ).executions;\n  } catch (error) {\n    console.error(error.message);\n    return [];\n  }\n};\n"]}