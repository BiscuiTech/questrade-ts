{"version":3,"file":"_getOrders.js","sourceRoot":"","sources":["../../../../../../src/private/api/AccountsCalls/_getOrders/_getOrders.ts"],"names":[],"mappings":";;;AACA,2CAA2D;AAC3D,0CAAsD;AAEtD,eAAe;AACf,iBAAiB;AACJ,QAAA,UAAU,GAAG,UAAC,WAAwB,IAAK,OAAA,UACtD,WAA2B;IAA3B,4BAAA,EAAA,mBAA2B;IACxB,OAAA,UAAC,SAAiB,IAAK,OAAA,UAAO,OAAe;;;;;;oBAG5C,qBAAM,4BAAmB,CAAC,WAAW,CAAC,CACpC,aAAW,8BAAsB,CAC/B,SAAS,EACT,OAAO,CACR,oBAAe,WAAa,CAC9B,EAAE,EAAA;wBANL,sBAAO,CACL,SAKG,CACJ,CAAC,MAAM,EAAC;;;oBAET,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;oBAC7B,sBAAO,EAAE,EAAC;;;;SAEb,EAd2B,CAc3B;AAdI,CAcJ,EAhBuD,CAgBvD,CAAC","sourcesContent":["import { Credentials, IOrder, IOrders } from '../../../../typescript';\nimport { endpointFormatDateTool } from '../../../../utils';\nimport { _axiosAccountGetApi } from '../../../routes';\n\n// + _getOrders\n/** _getOrders */\nexport const _getOrders = (credentials: Credentials) => (\n  stateFilter: string = 'All'\n) => (startDate: string) => async (endDate: string): Promise<IOrder[]> => {\n  try {\n    return (\n      await _axiosAccountGetApi(credentials)<IOrders>(\n        `/orders?${endpointFormatDateTool(\n          startDate,\n          endDate\n        )}stateFilter=${stateFilter}`\n      )()\n    ).orders;\n  } catch (error) {\n    console.error(error.message);\n    return [];\n  }\n};\n"]}