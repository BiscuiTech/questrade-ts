{"version":3,"file":"_getOrdersByIds.js","sourceRoot":"","sources":["../../../../../../src/private/api/AccountsCalls/_getOrders/_getOrdersByIds.ts"],"names":[],"mappings":";;;AACA,0CAAsD;AACtD,mBAAmB;AACnB,iBAAiB;AACJ,QAAA,eAAe,GAAG,UAAC,WAAwB,IAAK,OAAA,UAC3D,OAAiB;;;;;;gBAKb,qBAAM,4BAAmB,CAAC,WAAW,CAAC,CACpC,iBAAe,OAAO,CAAC,IAAI,CAAC,GAAG,CAAG,CACnC,EAAE,EAAA;;YAJL,EAAE;YACF,sBAAO,CACL,SAEG,CACJ,CAAC,MAAM,EAAC;;;gBAET,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;gBAC7B,sBAAO,EAAE,EAAC;;;;KAEb,EAd4D,CAc5D,CAAC","sourcesContent":["import { Credentials, IOrder, IOrders } from '../../../../typescript';\nimport { _axiosAccountGetApi } from '../../../routes';\n// + _getOrderByIds\n/** _getOrders */\nexport const _getOrdersByIds = (credentials: Credentials) => async (\n  orderId: number[]\n): Promise<IOrder[]> => {\n  try {\n    //\n    return (\n      await _axiosAccountGetApi(credentials)<IOrders>(\n        `/orders?ids=${orderId.join(',')}`\n      )()\n    ).orders;\n  } catch (error) {\n    console.error(error.message);\n    return [];\n  }\n};\n"]}