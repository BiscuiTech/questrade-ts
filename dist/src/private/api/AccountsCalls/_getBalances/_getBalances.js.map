{"version":3,"file":"_getBalances.js","sourceRoot":"","sources":["../../../../../../src/private/api/AccountsCalls/_getBalances/_getBalances.ts"],"names":[],"mappings":";;;AACA,0CAAsD;AAEtD,iBAAiB;AACjB,mBAAmB;AACN,QAAA,YAAY,GAAG,UAAC,WAAwB,IAAK,OAAA;;QAGxD,IAAI;YACF,EAAE;YACF,sBAAO,4BAAmB,CAAC,WAAW,CAAC,CAAY,WAAW,CAAC,EAAE,EAAC;SACnE;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,sBAAO;oBACL,mBAAmB,EAAE,EAAE;oBACvB,gBAAgB,EAAE,EAAE;oBACpB,sBAAsB,EAAE,EAAE;oBAC1B,mBAAmB,EAAE,EAAE;iBACxB,EAAC;SACH;;;KACF,EAfyD,CAezD,CAAC","sourcesContent":["import { Credentials, IBalances } from '../../../../typescript';\nimport { _axiosAccountGetApi } from '../../../routes';\n\n// + _getBalances\n/** _getBalances */\nexport const _getBalances = (credentials: Credentials) => async (): Promise<\n  IBalances\n> => {\n  try {\n    //\n    return _axiosAccountGetApi(credentials)<IBalances>('/balances')();\n  } catch (error) {\n    console.error(error.message);\n    return {\n      perCurrencyBalances: [],\n      combinedBalances: [],\n      sodPerCurrencyBalances: [],\n      sodCombinedBalances: [],\n    };\n  }\n};\n"]}