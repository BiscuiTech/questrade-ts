{"version":3,"file":"_getOptionsById.js","sourceRoot":"","sources":["../../../../../../src/private/api/MarketsCalls/_getOptionsById/_getOptionsById.ts"],"names":[],"mappings":";;;AAKA,0CAA+C;AAE/C,oBAAoB;AACpB,yBAAyB;AACZ,QAAA,eAAe,GAAG,UAAC,WAAwB,IAAK,OAAA,UAC3D,QAAgB;;;;;;gBAIZ,qBAAM,qBAAY,CAAC,WAAW,CAAC,CAC7B,cAAY,QAAQ,aAAU,CAC/B,EAAE,EAAA;oBAHL,sBAAO,CACL,SAEG,CACJ,CAAC,WAAW,EAAC;;;gBAEd,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;gBAC7B,sBAAO,EAAE,EAAC;;;;KAEb,EAb4D,CAa5D,CAAC","sourcesContent":["import {\n  Credentials,\n  IOptionChain,\n  IOptionChains,\n} from '../../../../typescript';\nimport { _axiosGetApi } from '../../../routes';\n\n// + _getOptionsById\n/** _getOptionsSymbols */\nexport const _getOptionsById = (credentials: Credentials) => async (\n  symbolID: number\n): Promise<IOptionChain[]> => {\n  try {\n    return (\n      await _axiosGetApi(credentials)<IOptionChains>(\n        `/symbols/${symbolID}/options`\n      )()\n    ).optionChain;\n  } catch (error) {\n    console.error(error.message);\n    return [];\n  }\n};\n"]}