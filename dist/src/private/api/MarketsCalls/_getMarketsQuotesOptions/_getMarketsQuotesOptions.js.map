{"version":3,"file":"_getMarketsQuotesOptions.js","sourceRoot":"","sources":["../../../../../../src/private/api/MarketsCalls/_getMarketsQuotesOptions/_getMarketsQuotesOptions.ts"],"names":[],"mappings":";;;AAQA,0CAAgD;AAEnC,QAAA,wBAAwB,GAAG,UAAC,WAAwB,IAAK,OAAA,UACpE,SAA0B,EAC1B,YAAoB,EACpB,UAAkB,EAClB,UAAgC,EAChC,cAAiC,EACjC,cAAiC;IAFjC,2BAAA,EAAA,iBAAgC;IAChC,+BAAA,EAAA,kBAAiC;IACjC,+BAAA,EAAA,kBAAiC;;;;;;oBAE3B,QAAQ,GACZ,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC;wBACjC,CAAC,CAAC;4BACE,SAAS,WAAA;yBACV;wBACH,CAAC,CAAC;4BACE,OAAO,EAAE;gCACP;oCACE,YAAY,cAAA;oCACZ,UAAU,YAAA;oCACV,UAAU,EAAE,UAAU,IAAI,KAAK,CAAC;oCAChC,cAAc,EAAE,cAAc,IAAI,CAAC;oCACnC,cAAc,EAAE,cAAc,IAAI,CAAC;iCACpC;6BACF;yBACF,CAAC;oBAGN,qBAAM,sBAAa,CAAC,WAAW,CAAC,CAAkB,QAAQ,CAAC,CACzD,yBAAyB,CAC1B,EAAE,EAAA;wBAHL,sBAAO,CACL,SAEG,CACJ,CAAC,MAAM,EAAC;;;;CACV,EA9BqE,CA8BrE,CAAC","sourcesContent":["import {\n  Credentials,\n  FiltersArray,\n  IOptionsQuote,\n  IOptionsQuotes,\n  OptionsIdArray,\n  OptionsPostData,\n} from '../../../../typescript';\nimport { _axiosPostApi } from '../../../routes';\n\nexport const _getMarketsQuotesOptions = (credentials: Credentials) => async (\n  optionIds: number[] | null,\n  underlyingId: number,\n  expiryDate: string,\n  optionType: string | null = null,\n  minstrikePrice: number | null = 0,\n  maxstrikePrice: number | null = 0\n): Promise<IOptionsQuote[]> => {\n  const postData: OptionsIdArray | FiltersArray =\n    !!optionIds && optionIds.length > 0\n      ? {\n          optionIds,\n        }\n      : {\n          filters: [\n            {\n              underlyingId,\n              expiryDate,\n              optionType: optionType || void 0,\n              minstrikePrice: minstrikePrice || 0,\n              maxstrikePrice: maxstrikePrice || 0,\n            },\n          ],\n        };\n\n  return (\n    await _axiosPostApi(credentials)<OptionsPostData>(postData)<IOptionsQuotes>(\n      '/markets/quotes/options'\n    )()\n  ).quotes;\n};\n"]}