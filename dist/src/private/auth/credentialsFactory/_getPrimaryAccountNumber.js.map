{"version":3,"file":"_getPrimaryAccountNumber.js","sourceRoot":"","sources":["../../../../../src/private/auth/credentialsFactory/_getPrimaryAccountNumber.ts"],"names":[],"mappings":";;AACA,sEAAsE;AACtE,SAAgB,wBAAwB,CACtC,QAAoB;IAEpB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACpC,OAAO,CAAC,IAAI,CACV,gEAAgE,CACjE,CAAC;QACF,OAAO,UAAU,CAAC;KACnB;IACD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QACzB,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;KAC3B;IACD,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,SAAS,EAAjB,CAAiB,CAAC,CAAC;IAC9D,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;QACvB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;KAC1B;IACD,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC5B,CAAC;AAjBD,4DAiBC","sourcesContent":["import { AcountNumberString, IAccount } from '../../../typescript';\n/** PROVIDE: IAccount[] THEN GET:  a 'primaryAccountNumber string'  */\nexport function _getPrimaryAccountNumber(\n  accounts: IAccount[]\n): AcountNumberString {\n  if (!accounts || accounts.length < 1) {\n    console.warn(\n      \"WARNING('No account number found') will default to '11111111' \"\n    );\n    return '11111111';\n  }\n  if (accounts.length === 1) {\n    return accounts[0].number;\n  }\n  const primary = accounts.filter(account => account.isPrimary);\n  if (primary.length >= 1) {\n    return primary[0].number;\n  }\n  return accounts[0].number;\n}\n"]}