{"version":3,"file":"timeutil.js","sourceRoot":"","sources":["../../../src/utils/timeutil.ts"],"names":[],"mappings":"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","sourcesContent":["const DAY = 24 * 60 * 60 * 1000;\nexport const day = (days: number) => days * DAY;\n\n// export function timeUtil() {\n//   //\n// }\n// let startDate = '2019-08-25';\n// let endDate = '2019-09-14T00:00:00.000000-05:00';\n// const now = Date.now;\n// export const dates = [\n//   startDate,\n//   new Date(now()).toISOString(),\n//   new Date(now()).toUTCString(),\n//   new Date(now()).toString(),\n//   new Date(now()).toLocaleString(),\n//   new Date(now()).toJSON(),\n//   new Date(startDate).toISOString(),\n//   new Date(startDate).toUTCString(),\n//   new Date(endDate).toString(),\n//   new Date(startDate).toLocaleString(),\n//   new Date(startDate).toJSON(),\n// ];\n// const offset = 9;\n// startDate = `2019-${offset}-13`;\n// endDate = `2019-${offset}-14`;\n\nexport const endpointFormatDateTool = (\n  startTime: string,\n  endTime: string\n): string => {\n  return `startTime=${dateToString(startTime)}&endTime=${dateToString(\n    endTime\n  )}&`;\n};\nexport const dateNowISO = () => new Date(Date.now()).toISOString();\nexport const dateNowNumeric = () => new Date(Date.now()).getTime();\n\nexport const dateToString = (dateTime: string | number): string =>\n  new Date(dateTime).toISOString();\n\nexport const dateToNumeric = (dateTime: string | number | Date): number =>\n  new Date(dateTime).getTime();\nexport const dateRangeFromNow = (backNumberOfDays: number) => {\n  const back = Math.floor(backNumberOfDays);\n  const numberOfDays = back < 0 ? back * -1 : back;\n  return dateRange(numberOfDays, dateNowISO());\n};\ntype StartDate = string;\ntype EndDate = string;\ninterface StartDateEndDateObject {\n  startDate: StartDate;\n  startTime: StartDate;\n  endDate: EndDate;\n  endTime: EndDate;\n}\nexport const dateRange = (\n  backNumberOfDays: number,\n  dateNow?: string\n): StartDateEndDateObject => {\n  let now = dateNow;\n  if (!now) {\n    now = dateNowISO();\n  }\n\n  const startDate: StartDate = rmvMiliSec(\n    dateToNumeric(now) - day(backNumberOfDays)\n  );\n\n  const endDate: EndDate = rmvMiliSec(now);\n  const startTime = startDate;\n  const endTime = endDate;\n  return {\n    startDate,\n    startTime,\n    endDate,\n    endTime,\n  };\n};\n\nconst rmvMiliSec = (date: Date | string | number): string => {\n  const { floor } = Math;\n  return dateToString(floor(dateToNumeric(date) / 1000) * 1000);\n};\n\nexport const setDateRange = (backNumberOfDays: number) => <T>(\n  funct: (startTime: string) => (endTime: string) => T,\n  fromDate?: string\n) => {\n  const { startTime, endTime } = dateRange(backNumberOfDays, fromDate);\n  return funct(startTime)(endTime);\n};\n\n// export const rangeTool = (startTime?: string | null) => (\n//   endTime?: string | null\n// ) => (numberOfDays?: number | null) => {\n//   const days = !!numberOfDays ? numberOfDays : 0;\n//   const endValue = !endTime ? dateNumericNow() : dateToNumeric(endTime);\n//   const startValue = !startTime ? dateNumericNow() : dateToNumeric(startTime);\n\n//   return [dateToString(endValue), dateToString(startValue + day(days))];\n// };\n\n// const naiveCalculate = (SECOND: number = 1000) => {\n//   const DAY = 24 * 60 * 60 * SECOND;\n//   return {\n//     SECOND,\n//     HOUR: 60 * 60 * SECOND,\n//     MINUTE: 60 * SECOND,\n//     DAY,\n//     WEEK5: 5 * DAY,\n//     WEEK7: 7 * DAY,\n//     MONTH: 31 * DAY,\n//     MONTH28: 28 * DAY,\n//     MONTH29: 29 * DAY,\n//     MONTH30: 30 * DAY,\n//     YEAR: 365 * DAY,\n//     YEAR366: 366 * DAY,\n//     yWEEKS: 52,\n//     yMONTHS: 12,\n//   };\n// };\n// export const naive = {\n//   inSec: naiveCalculate(1),\n//   inMiliSec: naiveCalculate(1000),\n// };\n// export const naiveSecondes = naive(1);\n// export const naiveMiliSecondes = naive(1000);\n\n// endpointFormatDateTool(startTime, endTime);\n\n// import { questrade } from \"../../classes/questradeBase\";\n// questrade(\"0I55OUTM7zHQZbG9AiwA5vY3zQY6W6qt0\").then(\n//   async will => console.log(will)\n// await will.get.orders(startDate, endDate)(), // .reduce(\n// will.get.current.accountNumber(),\n// will.get.markets\n// await will.get.supported.markets(),\n// await will.get.market.quotes([9292, 9292])\n// (pre: number, curent, _index) =>\n// console.log(\"\\n\", each.description, \"\\n\")\n// {\n//   const void0: unknown =\n//   if (!!curent.commission.valueOf()) console.log(curent.commission);\n//   return curent.commission + pre;\n//  },\n// 0\n// ()\n// );\n// );\n// date :\n// day\n// month\n// year\n// 2014-01-02T00:00:00.000000-05:00\n// 2019-09-14T09:07:37.461Z\n"]}