{"version":3,"file":"perSeconds.js","sourceRoot":"","sources":["../../../src/utils/perSeconds.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAEU,QAAA,UAAU,GAAG,UAAC,KAAa;IACtC,IAAI,KAAK,GAAW,KAAK,CAAC;IAC1B,WAAW;IACX,yBAAyB;IACzB,gCAAgC;IAEhC,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;IACrB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/B,eAAe;IACf,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACvC,uDAAuD;IACvD,8BAA8B;IAC9B,kDAAkD;IAClD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["/**\n * As per this function definition 0 hz will be equivalent to 1000 hz\n * Will return a non negative value delay = delay < 0 ? -(delay) : +(delay);\n * @return {number} delay in mili seconds = !!hz ? (1000 / hz) : 1000\n */\n\nexport const perSeconds = (hertz: number): number => {\n  let delay: number = hertz;\n  // non zero\n  // as per this definition\n  // 0 hz is equivalent to 1000 hz\n\n  delay = 1000 / delay;\n  delay = !!delay ? delay : 1000;\n  // non negative\n  delay = delay < 0 ? delay * -1 : delay;\n  // When delay is larger than 2147483647 or less than 1,\n  // the delay will be set to 1.\n  // Non-integer delays are truncated to an integer.\n  return delay;\n};\n"]}