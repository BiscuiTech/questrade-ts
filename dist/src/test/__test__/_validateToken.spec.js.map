{"version":3,"file":"_validateToken.spec.js","sourceRoot":"","sources":["../../../../src/test/__test__/_validateToken.spec.ts"],"names":[],"mappings":";;;AAAA,2FAA0F;AAE1F,QAAQ,CAAC,sBAAsB,EAAE;IAC/B,EAAE,CAAC,+CAA+C,EAAE;;YAClD,+BAAc,CAAC;gBACb,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE,IAAI;gBAChB,IAAI,EAAE,KAAK;gBACX,eAAe,EAAE,KAAK;gBACtB,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,EAAE;aACX,CAAC,CAAC;;;SACJ,CAAC,CAAC;IACH,EAAE,CAAC,8CAA8C,EAAE;;YACjD,+BAAc,CAAC;gBACb,OAAO,EAAE,UAAU;gBACnB,UAAU,EAAE,IAAI;gBAChB,IAAI,EAAE,KAAK;gBACX,eAAe,EAAE,KAAK;gBACtB,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,EAAE;aACX,CAAC,CAAC;;;SACJ,CAAC,CAAC;IACH,EAAE,CAAC,iCAAiC,EAAE;;YACpC,+BAAc,CAAC;gBACb,OAAO,EAAE,UAAU;gBACnB,UAAU,EAAE,IAAI;gBAChB,IAAI,EAAE,KAAK;gBACX,eAAe,EAAE,KAAK;gBACtB,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,UAAU;gBACnB,MAAM,EAAE,EAAE;aACX,CAAC,CAAC;;;SACJ,CAAC,CAAC;IACH,EAAE,CAAC,gCAAgC,EAAE,UAAM,IAAI;;;wBAC7C,qBAAM,CAAC;;4BACL,sBAAA,+BAAc,CAAC;oCACb,OAAO,EAAE,UAAU;oCACnB,UAAU,EAAE,IAAI;oCAChB,IAAI,EAAE,KAAK;oCACX,eAAe,EAAE,KAAK;oCACtB,SAAS,EAAE,EAAE;oCACb,OAAO,EAAE,EAAE;oCACX,MAAM,EAAE,aAAa;iCACtB,CAAC,EAAA;;yBAAA,CAAC,EAAE,EAAA;;oBATP,SASO,CAAC;oBACR,IAAI,EAAE,CAAC;;;;SACR,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { _validateToken } from '../../private/auth/axiosCredentials_oAUTH/_validateToken';\n\ndescribe('oAuth Validate Token', () => {\n  it('should validate with a numeric account number', async () => {\n    _validateToken({\n      account: 12345678,\n      apiVersion: 'v1',\n      test: false,\n      practiceAccount: false,\n      seedToken: '',\n      keyFile: '',\n      keyDir: '',\n    });\n  });\n  it('should validate with a string account number', async () => {\n    _validateToken({\n      account: '12345678',\n      apiVersion: 'v1',\n      test: false,\n      practiceAccount: false,\n      seedToken: '',\n      keyFile: '',\n      keyDir: '',\n    });\n  });\n  it('should validate with a key file', async () => {\n    _validateToken({\n      account: '12345678',\n      apiVersion: 'v1',\n      test: false,\n      practiceAccount: false,\n      seedToken: '',\n      keyFile: 'MOCKfile',\n      keyDir: '',\n    });\n  });\n  it('should validate with a key dir', async done => {\n    await (async () =>\n      _validateToken({\n        account: '12345678',\n        apiVersion: 'v1',\n        test: false,\n        practiceAccount: false,\n        seedToken: '',\n        keyFile: '',\n        keyDir: './build/tmp',\n      }))();\n    done();\n  });\n});\n"]}