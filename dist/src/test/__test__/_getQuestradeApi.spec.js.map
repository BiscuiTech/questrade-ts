{"version":3,"file":"_getQuestradeApi.spec.js","sourceRoot":"","sources":["../../../../src/test/__test__/_getQuestradeApi.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { redeemToken } from '../..';\nimport {\n  Credentials,\n  IQtApiAccount,\n  IQtApiMarket,\n  IQtApiOptionChains,\n  IQtApiOptionsQuotes,\n  IQtApiQuotes,\n  IQtApiSearch,\n  IQtApiSymbols,\n  IQuestradeApi,\n  StrategyVariantRequest,\n} from '../../typescript';\nimport { log, setDateRange, void0 } from '../../utils';\n\nconst dateRange30Days = setDateRange(30);\n\nlet qtApi: IQuestradeApi;\nlet credentials: Credentials;\n\nlet account: () => Promise<IQtApiAccount>;\nlet market: () => Promise<IQtApiMarket>;\nlet getQuotes: () => Promise<IQtApiQuotes>;\nlet getOptionsQuotes: () => Promise<IQtApiOptionsQuotes>;\nlet getSymbols: () => Promise<IQtApiSymbols>;\nlet getOptionChains: () => Promise<IQtApiOptionChains>;\nlet search: () => Promise<IQtApiSearch>;\n\nbeforeAll(async done => {\n  const qtApiAndCredentials = await redeemToken('MOCK');\n  qtApi = qtApiAndCredentials.qtApi;\n\n  credentials = qtApiAndCredentials.credentials;\n\n  account = async () => qtApi.account;\n  market = async () => qtApi.market;\n  getQuotes = async () => qtApi.getQuotes;\n  getOptionsQuotes = async () => qtApi.getOptionsQuotes;\n  search = async () => qtApi.search;\n  getSymbols = async () => qtApi.getSymbols;\n  getOptionChains = async () => qtApi.getOptionChains;\n\n  void0({\n    dateRange30Days,\n    market,\n    getQuotes,\n    search,\n    getSymbols,\n  });\n  done();\n});\n\n// # QtAPI PROPERTIES\ndescribe('QtAPI PROPERTIES will test all properties and methods on qtApi', () => {\n  it('should validate credentials toValue', async done => {\n    void0(credentials.toValue());\n    done();\n  });\n  it('should credentials toString', async done => {\n    void0(credentials.toString());\n    done();\n  });\n\n  it('should validate qtApi myBalances', async done => {\n    expect(\n      (await qtApi.myBalances()).CAD.combined.current.buyingPower\n    ).not.toBeNaN();\n    done();\n  });\n\n  it('should validate qtApi myBalances', async done => {\n    void0(qtApi.serverTime);\n    done();\n  });\n  it('should validate qtApi myBalances', async done => {\n    void0((await qtApi.myBalances()).CAD.combined.current.buyingPower);\n    done();\n  });\n});\n\n// # ACCOUNT METHODS\ndescribe('ACCOUNT METHODS will test all methods on get.account', () => {\n  it('should validate activities', async done => {\n    const activities30Days = async () =>\n      dateRange30Days((await account()).getActivities);\n    void0(await activities30Days());\n    done();\n  });\n  it('should validate balances', async done => {\n    void0(await (await account()).getBalances());\n    done();\n  });\n  it('should validate allAccount', async done => {\n    void0(await (await account()).getAllAccounts());\n    done();\n  });\n  it('should validate executions', async done => {\n    const executions30Days = async () =>\n      dateRange30Days((await account()).getExecutions);\n    void0(await executions30Days());\n    done();\n  });\n  it(\"should validate orders 'All' state filter\", async done => {\n    const orders30Days = async () =>\n      dateRange30Days((await account()).getOrders('All'));\n    void0(await orders30Days());\n    done();\n  });\n  it('should validate orders default state filter', async done => {\n    const orders30Days = async () =>\n      dateRange30Days((await account()).getOrders());\n    void0(await orders30Days());\n    done();\n  });\n  it('should validate orders Open state filter', async done => {\n    const orders30Days = async () =>\n      dateRange30Days((await account()).getOrders('Open'));\n    void0(await orders30Days());\n    done();\n  });\n  it('should validate orders Closed state filter', async done => {\n    const orders30Days = async () =>\n      dateRange30Days((await account()).getOrders('Closed'));\n    void0(await orders30Days());\n    done();\n  });\n  it('should validate ordersByIds', async done => {\n    void0((await account()).getOrdersByIds([123]));\n    done();\n  });\n  it('should validate positions', async done => {\n    void0(await (await account()).getPositions());\n    done();\n  });\n  it('should validate serverTime', async done => {\n    void0(await (await account()).getServerTime());\n    done();\n  });\n});\n\n// # MARKET METHODS\ndescribe('MARKET METHODS will test all methods on get.market', () => {\n  it('should validate allMarkets', async done => {\n    void0(await (await market()).getAllMarkets());\n    done();\n  });\n  it(\"should validate candlesByStockId with 'OneDay' interval\", async done => {\n    const candel30Day = async () =>\n      dateRange30Days((await market()).getCandlesByStockId(8049)('OneDay'));\n    void0(await candel30Day());\n    done();\n  });\n  it('should validate candlesByStockId with default interval', async done => {\n    const candel30Day = async () =>\n      dateRange30Days((await market()).getCandlesByStockId(8049)());\n    void0(await candel30Day());\n    done();\n  });\n});\n\n// # QUOTES METHODES\ndescribe('QUOTES METHODES will test all methods on get.quotes', () => {\n  const demoRequestVariants: StrategyVariantRequest = {\n    variants: [\n      {\n        variantId: 1,\n        strategy: 'Custom',\n        legs: [\n          {\n            symbolId: 27244725,\n            ratio: 1000,\n            action: 'Buy',\n          },\n          {\n            symbolId: 27244738,\n            ratio: 1001,\n            action: 'Sell',\n          },\n        ],\n      },\n    ],\n  };\n  it('should validate get quotes byStockIds', async done => {\n    void0(await (await getQuotes()).byStockIds([8049]));\n    done();\n  });\n  it('should validate get quotes byStrategies', async done => {\n    void0(await (await getQuotes()).byStrategies(demoRequestVariants));\n    done();\n  });\n  it('should validate that can get optionsQuotes fromFilter', async done => {\n    void0(\n      await (await getOptionsQuotes()).fromFilter({\n        expiryDate: '2019-10-18T00:00:00.000000-05:00',\n        underlyingId: 27426,\n      })\n    );\n    done();\n  });\n  it('should validate that can get optionsQuotes byOptionsIds', async done => {\n    void0(await (await getOptionsQuotes()).byOptionsIds([27244725]));\n    done();\n  });\n});\n\n// # SEARCH METHODES\ndescribe('SEARCH METHODES will test all methods on get.search', () => {\n  it('should validate countResults ', async done => {\n    void0(await (await search()).stock('aapl'));\n    void0(await (await search()).stock('aapl', 0));\n    done();\n  });\n  it('should validate allStocks ', async done => {\n    void0(await (await search()).allStocks('aapl'));\n    void0(await (await search()).allStocks('aapl', 0));\n    done();\n  });\n  it('should validate countResults ', async done => {\n    void0(await (await search()).countResults('aapl'));\n    done();\n  });\n});\n\n// # SYMBOLS METHODS\ndescribe('SYMBOLS METHODS will test all methods on get.symbols', () => {\n  it('should validate optionChains byStockId', async done => {\n    void0(await (await getOptionChains()).byStockId(8049));\n    done();\n  });\n  it('should validate symbols byStockIds', async done => {\n    void0(await (await getSymbols()).byStockIds([8049]));\n\n    done();\n  });\n});\nvoid0(log);\n"]}