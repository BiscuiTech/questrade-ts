{"version":3,"file":"getPrimaryAccountNumber.spec.js","sourceRoot":"","sources":["../../../../src/test/__test__/getPrimaryAccountNumber.spec.ts"],"names":[],"mappings":";;;AAKA,yCAAyD;AAGzD,IAAI,CAAC,SAAS,EAAE,UAAM,IAAI;;;QACpB,YAAY,GAAe;QAC7B,EAAE;SACH,CAAC;QACF,MAAM,CAAC,kCAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnE,YAAY,GAAG;YACb;gBACE,IAAI,EAAE,MAAqB;gBAC3B,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,QAAyB;gBACjC,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,YAAiC;aACrD;SACF,CAAC;QACF,MAAM,CAAC,kCAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnE,YAAY,GAAG;YACb;gBACE,IAAI,EAAE,MAAqB;gBAC3B,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,QAAyB;gBACjC,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,YAAiC;aACrD;YACD;gBACE,IAAI,EAAE,MAAqB;gBAC3B,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,QAAyB;gBACjC,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,YAAiC;aACrD;SACF,CAAC;QACF,MAAM,CAAC,kCAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEnE,YAAY,GAAG;YACb;gBACE,IAAI,EAAE,MAAqB;gBAC3B,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,QAAyB;gBACjC,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,YAAiC;aACrD;YACD;gBACE,IAAI,EAAE,MAAqB;gBAC3B,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,QAAyB;gBACjC,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,YAAiC;aACrD;SACF,CAAC;QACF,MAAM,CAAC,kCAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnE,IAAI,EAAE,CAAC;;;KACR,CAAC,CAAC","sourcesContent":["import {\n  AccountStatus,\n  AccountType,\n  ClientAccountType,\n} from 'questrade-api-enumerations';\nimport { _getPrimaryAccountNumber } from '../../private';\nimport { IAccount } from '../../typescript';\n\ntest('should ', async done => {\n  let dummyAccount: IAccount[] = [\n    //\n  ];\n  expect(_getPrimaryAccountNumber(dummyAccount)).toEqual('11111111');\n  dummyAccount = [\n    {\n      type: 'TFSA' as AccountType,\n      number: '22222222',\n      status: 'Active' as AccountStatus,\n      isPrimary: false,\n      isBilling: true,\n      clientAccountType: 'Individual' as ClientAccountType,\n    },\n  ];\n  expect(_getPrimaryAccountNumber(dummyAccount)).toEqual('22222222');\n  dummyAccount = [\n    {\n      type: 'TFSA' as AccountType,\n      number: '33333333',\n      status: 'Active' as AccountStatus,\n      isPrimary: false,\n      isBilling: true,\n      clientAccountType: 'Individual' as ClientAccountType,\n    },\n    {\n      type: 'TFSA' as AccountType,\n      number: '44444444',\n      status: 'Active' as AccountStatus,\n      isPrimary: true,\n      isBilling: true,\n      clientAccountType: 'Individual' as ClientAccountType,\n    },\n  ];\n  expect(_getPrimaryAccountNumber(dummyAccount)).toEqual('44444444');\n\n  dummyAccount = [\n    {\n      type: 'TFSA' as AccountType,\n      number: '55555555',\n      status: 'Active' as AccountStatus,\n      isPrimary: false,\n      isBilling: true,\n      clientAccountType: 'Individual' as ClientAccountType,\n    },\n    {\n      type: 'TFSA' as AccountType,\n      number: '66666666',\n      status: 'Active' as AccountStatus,\n      isPrimary: false,\n      isBilling: true,\n      clientAccountType: 'Individual' as ClientAccountType,\n    },\n  ];\n  expect(_getPrimaryAccountNumber(dummyAccount)).toEqual('55555555');\n  done();\n});\n"]}