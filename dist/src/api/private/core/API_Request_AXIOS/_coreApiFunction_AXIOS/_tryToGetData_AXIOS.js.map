{"version":3,"file":"_tryToGetData_AXIOS.js","sourceRoot":"","sources":["../../../../../../../src/api/private/core/API_Request_AXIOS/_coreApiFunction_AXIOS/_tryToGetData_AXIOS.ts"],"names":[],"mappings":";;;AAAA,wDAA0B;AAGb,QAAA,aAAa,GAAG,UAAO,OAAyB;IAC3D,OAAO,UAAO,SAAoB;;;;;;oBAIlB,qBAAM,eAAK,CAAC,OAAO,CAAC,EAAA;;oBAA1B,GAAG,GAAG,SAAoB;oBAC1B,IAAI,GAAa,GAAG,CAAC,IAAI,CAAC;oBAChC,IAAI,CAAC,IAAI,EAAE;wBACT,MAAM,SAAS,CAAC,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;qBACnE;oBACD,qCAAqC;oBACrC,qBAAqB;oBACrB,sBAAO,IAAI,EAAC;;;oBAEZ,MAAM,SAAS,CAAC,OAAK,CAAC,CAAC;;;;SAE1B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import axios from 'axios';\nimport { CoreApiConfig, LogErrors } from '../../../../../typescript';\n\nexport const _tryToGetData = <R, D>(_config: CoreApiConfig<D>) => {\n  return async (_logError: LogErrors): Promise<R> => {\n    // console.log(_config);\n\n    try {\n      const res = await axios(_config);\n      const data: void | R = res.data;\n      if (!data) {\n        throw _logError(new Error(\"Can't retrive data from call to API\"));\n      }\n      // console.log(JSON.stringify(data));\n      // console.log(data);\n      return data;\n    } catch (error) {\n      throw _logError(error);\n    }\n  };\n};\n"]}