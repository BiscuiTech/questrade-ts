{"version":3,"file":"IQuotesOptionsByIds.js","sourceRoot":"","sources":["../../../src/typescript/IQuotesOptionsByIds.ts"],"names":[],"mappings":"","sourcesContent":["export interface IOptionsQuotes {\n  quotes: IOptionsQuote[];\n}\nexport interface IOptionsQuote {\n  /** List of Level1 OptionData records. */\n  quotes?: [];\n  /** List of Level1 OptionData records. */\n\n  Level1OptionData?: [];\n\n  /** Underlying name */\n  underlying?: string;\n\n  /** Underlying ID */\n  underlyingId?: number;\n\n  /** Symbol name */\n  symbol?: string;\n\n  /** Symbol ID */\n  stockId?: number;\n\n  /** Bid price */\n  bidPrice?: number;\n\n  /** Bid size */\n  bidSize?: number;\n\n  /** Ask price */\n  askPrice?: number;\n\n  /** Ask size */\n  askSize?: number;\n\n  /** Last trade price trade hours */\n  lastTradePriceTrHrs?: number;\n\n  /** Last trade price */\n  lastTradePrice?: number;\n\n  /** Last trade size */\n  lastTradeSize?: number;\n\n  /** Last trade tick */\n  lastTradeTick?: string;\n\n  /** Last trade time */\n  lastTradeTime?: Date;\n\n  /** Volume */\n  volume?: number;\n\n  /** Open price */\n  openPrice?: number;\n\n  /** High price */\n  highPrice?: number;\n\n  /** Low price */\n  lowPrice?: number;\n\n  /** Volatility */\n  volatility?: number;\n\n  /** Delta */\n  delta?: number;\n\n  /** Gamma */\n  gamma?: number;\n\n  /** Theta */\n  theta?: number;\n\n  /** Vega */\n  vega?: number;\n\n  /** Rho */\n  rho?: number;\n\n  /** Open interest */\n  openInterest?: number;\n\n  /** How much is data delayed */\n  delay?: number;\n\n  /** Whether or not the symbol was halted */\n  isHalted?: boolean;\n\n  /** Volume Weighted Average Price */\n  VWAP?: number;\n}\n\nexport interface IQuotesOptionsByIds {\n  byIds?: (optionIds: number[]) => Promise<IOptionsQuotes>;\n}\n\nexport type QuotesOptions = (\n  filters: OptionsFilters\n) => Promise<IOptionsQuotes>;\n\nexport type QuotesOptionsbyFilterAndIds = IQuotesOptionsByIds & QuotesOptions;\n\nexport type OptionsPostData = OptionsIdArray | FiltersArray;\nexport interface OptionsIdArray {\n  optionIds: number[];\n}\n\nexport interface FiltersArray {\n  filters: OptionsFilters[];\n}\n\nexport interface OptionsFilters {\n  underlyingId: number;\n  expiryDate: string;\n  optionType?: string | undefined | null;\n  minstrikePrice?: number | undefined | null;\n  maxstrikePrice?: number | undefined | null;\n}\n"]}